version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: angel-postgres
    environment:
      POSTGRES_DB: angeldb
      POSTGRES_USER: angel
      POSTGRES_PASSWORD: ${DB_PASSWORD:changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U angel"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - angel-network

  redis:
    image: redis:7-alpine
    container_name: angel-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - angel-network

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: angel-update-service
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: angeldb
      DB_USER: angel
      DB_PASSWORD: ${DB_PASSWORD:changeme123}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../data:/data
      - ../logs:/logs
    networks:
      - angel-network

volumes:
  postgres_data:
  redis_data:

networks:
  angel-network:
    driver: bridge
